const express = require('express');
const dotenv = require('dotenv');
const app = express();
dotenv.config()
const port = process.env.PORT || 8900
let {dbConnect,getData} = require('./controller/dbController');

const VALID_USERNAME = process.env.BASIC_AUTH_USER
const VALID_PASSWORD = process.env.BASIC_AUTH_PASSWORD

const basicAuth = (req,res,next) => {
    const authHeader = req.headers.authorization;
    if(!authHeader || !authHeader.startsWith("Basic ")){
        return res.status(401).send("Unauthorized")
    }
    //decode base 64 header
    const base64Credentials = authHeader.split(" ")[1];
    const credentials = Buffer.from(base64Credentials,'base64').toString("utf-8");
    const [username,password] = credentials.split(':')

    if(username === VALID_USERNAME && password === VALID_PASSWORD){
        return next()
    }
    res.status(401).send("Unauthorized")
}

app.get('/',(req,res)=>{
    res.status(200).send('Hii From Express')
});

//heart beat
app.get('/health',(req,res) => {
    res.status(200).send('Health Check')
});

//list all the city
app.get('/location',basicAuth,async(req,res)=>{
    let query = {};
    let collection = 'location';
    let output = await getData(collection,query)
    res.status(200).send(output)
})

//get all restaurats
app.get('/restaurants',async(req,res) => {
    let query = {}
    let {stateId} = req.query

    if(stateId){
        query = {
            "state_id":Number(stateId)
        }
    }
    let collection = 'restaurants';
    let output = await getData(collection,query)
    res.status(200).send(output)
})

//list all the meals
app.get('/mealtype',async(req,res)=>{
    let query = {};
    let collection = 'mealType';
    let output = await getData(collection,query)
    res.status(200).send(output)
})

//filters
app.get('/filters/:mealId',async(req,res) => {
    let query = {};
    let collection = 'restaurants';
    let mealId = Number(req.params.mealId)
    let cuisineId = Number(req.query.cuisineId)
    if(mealId && cuisineId){
        query={
            "cuisines.cuisine_id":cuisineId,
            "mealTypes.mealtype_id":mealId
        }
    }else if(mealId){
        query={
            "mealTypes.mealtype_id":mealId
        }
    }
    let output = await getData(collection,query)
    res.status(200).send(output)
})


app.listen(port,() => {
    dbConnect()
    console.log(`Server is running on port ${port}`)
});